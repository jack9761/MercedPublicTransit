import networkx
import numpy as np
import osmnx
import pandas
import geopandas
import itertools
import multiprocessing as mp
import functools
import pickle
import osmapi
import os
import numpy


class Stop:
    def __init__(self, OSM_ID: str, times: [int]):
        self.OSM_ID = OSM_ID
        self.times = times


class Route:
    def __init__(self, operatingdays: str, route_name: str, operater: str, stops: [Stop]):
        self.operatingdays = operatingdays
        self.route_name = route_name
        self.operater = operater
        self.stops = stops


BobcatExpress = Route("Weekday", "Bobcat Express", "UC Merced", [
    Stop("n12154520785", [389, 429, 469, 524, 564, 604, 644, 729, 829, 917, 1017, 1102, 1202]),
    Stop("n12154520786", [392, 432, 472, 527, 567, 607, 647, 732, 832, 920, 1020, 1105, 1205]),
    Stop("n12154520787", [394, 434, 474, 529, 569, 609, 649, 734, 834, 922, 1022, 1107, 1207]),
    Stop("n12154509604", [399, 439, 479, 534, 574, 614, 654, 739, 839, 927, 1027, 1112, 1212]),
    Stop("n12153159159", [404, 444, 484, 539, 579, 619, 660, 745, 845, 933, 1033, 1118, 1218]),
    Stop("n12167340731", [415, 455, 510, 550, 590, 630, 671, 771, 856, 959, 1044, 1144, 1229]),
    Stop("n12162711345", [680, 780, 865, 968, 1053, 1153]),
    Stop("n12167340732", [689, 789, 877, 977, 1062, 1162]),
    Stop("n12162649319", [698, 798, 886, 986, 1071, 1171]),
    Stop("n12162599795", [710, 810, 898, 998, 1083, 1183, 1280]),
    Stop("n12162634549", [712, 812, 900, 1000, 1085, 1185]),
    Stop("n12153159164", [721, 821, 909, 1009, 1094, 1194]),
    Stop("n12153159162", [723, 823, 911, 1011, 1096, 1196])])
C1 = Route("Weekday", "C-1", "UC Merced", [
    Stop("n12153159167", [380, 451, 537, 608, 694, 765, 856, 927, 1013, 1084, 1155, 1241, 1312]),
    Stop("n12153159165",
         [392, 434, 463, 520, 549, 591, 620, 677, 706, 748, 777, 834, 868, 910, 939, 996, 1025, 1067, 1096, 1138, 1167,
          1224, 1253, 1295, 1324]),
    Stop("n12153159164", [394, 465, 551, 622, 708, 779, 870, 941, 1027, 1098, 1169, 1255, 1326]),
    Stop("n12153159162", [396, 467, 553, 624, 710, 781, 872, 943, 1029, 1100, 1171, 1257, 1328]),
    Stop("n12153159160", [399, 470, 556, 627, 713, 784, 875, 946, 1032, 1103, 1174, 1260, 1331]),
    Stop("n12153159159", [405, 476, 562, 633, 719, 790, 881, 952, 1038, 1109, 1180, 1266, 1337]),
    Stop("n12153159156", [416, 502, 573, 659, 730, 816, 892, 978, 1049, 1120, 1206, 1277, 1348]),
    Stop("n12153159161", [426, 512, 583, 669, 740, 826, 902, 988, 1059, 1130, 1216, 1287]),
    Stop("n12153159163", [429, 515, 586, 672, 743, 829, 905, 991, 1062, 1133, 1219, 1290]),
])
C2 = Route("Weekday", "C-2", "UC Merced", [
    Stop("n12154520785", [380, 438, 511, 569, 642, 700, 773, 831, 892, 950, 1023, 1081, 1154, 1212, 1285]),
    Stop("n12154520786", [383, 441, 514, 572, 645, 703, 776, 834, 895, 953, 1026, 1084, 1157, 1215, 1288]),
    Stop("n12154520787", [385, 443, 516, 574, 647, 705, 778, 836, 897, 955, 1028, 1086, 1159, 1217, 1290]),
    Stop("n12154522608", [392, 450, 523, 581, 654, 712, 785, 843, 904, 962, 1035, 1093, 1166, 1224, 1297]),
    Stop("n12154523360", [399, 457, 530, 588, 661, 719, 792, 853, 911, 969, 1042, 1100, 1173, 1231, 1304]),
    Stop("n12154509606", [401, 459, 532, 590, 663, 721, 794, 855, 913, 971, 1044, 1102, 1175, 1233, 1306]),
    Stop("n12154509604", [405, 463, 536, 594, 667, 725, 798, 859, 917, 975, 1048, 1106, 1179, 1237, 1310]),
    Stop("n12154509603", [408, 466, 539, 597, 670, 728, 801, 862, 920, 978, 1051, 1109, 1182, 1240, 1313]),
    Stop("n12153159159", [411, 469, 542, 600, 673, 731, 804, 865, 923, 981, 1054, 1112, 1185, 1243, 1316]),
    Stop("n12154500900", [422, 495, 553, 626, 684, 757, 815, 876, 934, 1007, 1065, 1138, 1196, 1269, 1327]),
    Stop("n12154509601", [429, 502, 560, 633, 691, 764, 822, 883, 941, 1014, 1072, 1145, 1203, 1276]),
    Stop("n12154509602", [433, 506, 564, 637, 695, 768, 826, 887, 945, 1018, 1076, 1149, 1207, 1280])])
E1 = Route("Weekend", "E-1", "UC Merced", [
    Stop("n12162599793",
         [510, 547, 582, 619, 639, 676, 711, 748, 768, 805, 840, 877, 897, 934, 954, 994, 1014, 1051, 1086, 1123, 1143,
          1180, 1200, 1237, 1272, 1309, 1329, 1366, 1386]),
    Stop("n12154530337", [519, 591, 648, 720, 777, 849, 906, 963, 1023, 1095, 1152, 1209, 1281, 1338]),
    Stop("n12162599795", [526, 598, 655, 727, 784, 856, 913, 970, 1030, 1102, 1159, 1216, 1288, 1345]),
    Stop("n12162634549", [528, 600, 657, 729, 786, 858, 915, 975, 1032, 1104, 1161, 1218, 1290, 1347]),
    Stop("n12154523360", [541, 613, 670, 742, 799, 871, 928, 988, 1045, 1117, 1174, 1231, 1303, 1360]),
    Stop("n12162649318", [543, 615, 672, 744, 801, 873, 930, 990, 1047, 1119, 1176, 1233, 1305, 1362]),
    Stop("n12162599794", [554, 626, 683, 755, 812, 884, 941, 1001, 1058, 1130, 1187, 1244, 1316, 1373])
])
E2 = Route("Weekend", "E-2", "UC Merced", [
    Stop("n12162711342", [665, 729, 778, 827, 876, 940, 989, 1038, 1105, 1154, 1218, 1267, 1316]),
    Stop("n12162711345", [674, 738, 787, 836, 885, 949, 998, 1047, 1114, 1163, 1227, 1276]),
    Stop("n12154520785", [680, 744, 793, 842, 891, 955, 1004, 1056, 1120, 1169, 1233, 1282]),
    Stop("n12154520786", [683, 747, 796, 845, 894, 958, 1007, 1059, 1123, 1172, 1236, 1285]),
    Stop("n12154520787", [685, 749, 798, 847, 896, 960, 1009, 1061, 1125, 1174, 1238, 1287]),
    Stop("n12154523360", [691, 755, 804, 853, 902, 966, 1015, 1067, 1131, 1180, 1244, 1293]),
    Stop("n12154509606", [693, 757, 806, 855, 904, 968, 1017, 1069, 1133, 1182, 1246, 1295]),
    Stop("n12162735605", [697, 761, 810, 859, 908, 972, 1021, 1073, 1137, 1186, 1250, 1299]),
    Stop("n12162711346", [703, 767, 816, 865, 914, 978, 1027, 1079, 1143, 1192, 1256, 1305]),
    Stop("n12154530339", [706, 770, 819, 868, 917, 981, 1030, 1082, 1146, 1195, 1259, 1308])
])
FastCat = Route("Weekday", "FastCat", "UC Merced", [
    Stop("n12154530338",
         [399, 436, 463, 515, 542, 579, 606, 643, 670, 707, 749, 786, 813, 850, 880, 917, 944, 996, 1023, 1060, 1087,
          1124, 1151, 1188, 1215, 1267, 1294, 1331]),
    Stop("n12162711345", [402, 466, 545, 609, 673, 752, 816, 883, 947, 1026, 1090, 1154, 1218, 1297]),
    Stop("n12162599794", [404, 468, 547, 611, 675, 754, 818, 885, 949, 1028, 1092, 1156, 1220, 1299]),
    Stop("n12153159160",
         [408, 433, 472, 512, 551, 576, 615, 640, 679, 704, 758, 783, 822, 847, 889, 914, 953, 993, 1032, 1057, 1096,
          1121, 1160, 1185, 1224, 1264, 1303, 1328]),
    Stop("n12154509603", [412, 476, 555, 619, 683, 762, 826, 893, 957, 1036, 1100, 1164, 1228, 1307]),
    Stop("n12153159161", [423, 502, 566, 630, 694, 773, 837, 904, 983, 1047, 1111, 1175, 1254, 1318]),
    Stop("n12154530339", [439, 518, 582, 646, 710, 789, 853, 920, 999, 1063, 1127, 1191, 1270, 1334]),
    Stop("n12162599793", [442, 521, 585, 649, 713, 792, 859, 923, 1002, 1066, 1130, 1194, 1273, 1337])
])
FastCat2 = Route("Weekday", "FastCat 2", "UC Merced", [
    Stop("n12162711345", [514, 578, 657, 721, 785, 864, 928, 995, 1074, 1138, 1217, 1281]),
    Stop("n12162599794", [517, 581, 660, 724, 788, 867, 931, 998, 1077, 1141, 1220, 1284]),
    Stop("n12153159160", [519, 583, 662, 726, 790, 869, 933, 1000, 1079, 1143, 1222, 1286]),
    Stop("n12154509603", [523, 587, 666, 730, 794, 873, 937, 1004, 1083, 1147, 1226, 1290]),
    Stop("n12153159159", [527, 591, 670, 734, 798, 877, 941, 1008, 1087, 1151, 1230, 1294]),
    Stop("n12154530336",
         [538, 565, 617, 644, 681, 708, 745, 772, 809, 851, 888, 915, 952, 982, 1019, 1061, 1098, 1125, 1162, 1204,
          1241, 1268, 1305]),
    Stop("n12153159161", [548, 627, 691, 755, 819, 898, 962, 1029, 1108, 1172, 1251]),
    Stop("n12162711346", [551, 630, 694, 758, 822, 901, 965, 1032, 1111, 1175, 1254]),
    Stop("n12154530338",
         [554, 574, 633, 653, 697, 717, 761, 781, 825, 860, 904, 924, 968, 991, 1035, 1070, 1114, 1134, 1178, 1213,
          1257, 1277]),
    Stop("n12154530339", [557, 636, 700, 764, 828, 907, 971, 1038, 1117, 1181, 1260]),
])
GLine = Route("Weekday", "G-Line", "UC Merced", [
    Stop("n12154520785", [390, 458, 541, 609, 677, 745, 828, 901, 969, 1052, 1120, 1188, 1271]),
    Stop("n12154520786", [393, 461, 544, 612, 680, 748, 831, 904, 972, 1055, 1123, 1191, 1274]),
    Stop("n12154520787", [395, 463, 546, 614, 682, 750, 833, 906, 974, 1057, 1125, 1193, 1276]),
    Stop("n12154509604", [400, 468, 551, 619, 687, 755, 838, 911, 979, 1062, 1130, 1198, 1281]),
    Stop("n12153159159", [406, 474, 557, 625, 693, 761, 844, 917, 985, 1068, 1136, 1204, 1287]),
    Stop("n12167312041", [417, 500, 568, 636, 704, 787, 855, 928, 1011, 1079, 1147, 1230, 1298]),
    Stop("n12162599795", [438, 521, 589, 657, 725, 808, 876, 949, 1032, 1100, 1168, 1251, 1319]),
    Stop("n12162634549", [440, 523, 591, 659, 727, 810, 883, 951, 1034, 1102, 1170, 1253, 1321]),
    Stop("n12167312042", [442, 525, 593, 661, 729, 812, 885, 953, 1036, 1104, 1172, 1255, 1323])
])
YosemiteExpress = Route("Weekday", "Yosemite Express", "UC Merced", [
    Stop("n12154530339",
         [540, 567, 594, 636, 663, 690, 717, 744, 771, 798, 840, 867, 894, 921, 963, 995, 1022, 1049, 1076, 1118, 1145,
          1172, 1199, 1226, 1253, 1280, 1322]),
    Stop("n12154530336",
         [547, 574, 616, 643, 670, 697, 724, 751, 778, 820, 847, 874, 901, 943, 970, 1002, 1029, 1056, 1098, 1125, 1152,
          1179, 1206, 1233, 1260, 1302, 1329]),
    Stop("n12153159161",
         [556, 583, 625, 652, 679, 706, 733, 760, 787, 829, 856, 883, 910, 952, 984, 1011, 1038, 1065, 1107, 1134, 1161,
          1188, 1215, 1242, 1269, 1311]),
    Stop("n12154530337",
         [559, 586, 628, 655, 682, 709, 736, 763, 790, 832, 859, 886, 913, 955, 987, 1014, 1041, 1068, 1110, 1137, 1164,
          1191, 1218, 1245, 1272, 1314]),
    Stop("n12154530338",
         [564, 591, 633, 660, 687, 714, 741, 768, 795, 837, 864, 891, 918, 960, 992, 1019, 1046, 1073, 1115, 1142, 1169,
          1196, 1223, 1250, 1277, 1319])
])
UCBusSouth = Route("Weekday", "UC Bus South", "Merced Bus", [
    Stop("n12345722306",
         [370, 410, 450, 490, 530, 570, 610, 650, 690, 730, 770, 810, 850, 890, 930, 970, 1010, 1050, 1090, 1130,
          1170]),
    Stop("n12162634549",
         [373, 413, 453, 493, 533, 573, 613, 653, 693, 733, 773, 813, 853, 893, 933, 973, 1013, 1053, 1093, 1133,
          1173]),
    Stop("n12385601110",
         [375, 415, 455, 495, 535, 575, 615, 655, 695, 735, 775, 815, 855, 895, 935, 975, 1015, 1055, 1095, 1135,
          1175]),
    Stop("n12385601113",
         [380, 420, 460, 500, 540, 580, 620, 660, 700, 740, 780, 820, 860, 900, 940, 980, 1020, 1060, 1100, 1140,
          1180]),
    Stop("n12154509604",
         [385, 425, 465, 505, 545, 585, 625, 665, 705, 745, 785, 825, 865, 905, 945, 985, 1025, 1065, 1105, 1145,
          1185]),
    Stop("n12385555145",
         [386, 426, 466, 506, 546, 586, 626, 666, 706, 746, 786, 826, 866, 906, 946, 986, 1026, 1066, 1106, 1146,
          1186]),
    Stop("n12385630325",
         [393, 433, 473, 513, 553, 593, 633, 673, 713, 753, 793, 833, 873, 913, 953, 993, 1033, 1073, 1113, 1153,
          1193]),
    Stop("n12210469803",
         [402, 442, 482, 522, 562, 602, 642, 682, 722, 762, 802, 842, 882, 922, 962, 1002, 1042, 1082, 1122, 1162,
          1202])
])
USBusNorth = Route("Weekday", "UC Bus North", "Merced Bus", [
    Stop("n12210469803",
         [407, 447, 487, 527, 567, 607, 647, 687, 727, 767, 807, 847, 887, 927, 967, 1007, 1047, 1087, 1127, 1167]),
    Stop("n12385630325",
         [417, 457, 497, 537, 577, 617, 657, 697, 737, 777, 817, 857, 897, 937, 977, 1017, 1057, 1097, 1137, 1177]),
    Stop("n12153159161",
         [424, 464, 504, 544, 584, 624, 664, 704, 744, 784, 824, 864, 904, 944, 984, 1024, 1064, 1104, 1144, 1184]),
    Stop("n12154509604",
         [426, 466, 506, 546, 586, 626, 666, 706, 746, 786, 826, 866, 906, 946, 986, 1026, 1066, 1106, 1146, 1186]),
    Stop("n12385601113",
         [431, 471, 511, 551, 591, 631, 671, 711, 751, 791, 831, 871, 911, 951, 991, 1031, 1071, 1111, 1151, 1191]),
    Stop("n12385601110",
         [436, 476, 516, 556, 596, 636, 676, 716, 756, 796, 836, 876, 916, 956, 996, 1036, 1076, 1116, 1156, 1196]),
    Stop("n12345722306",
         [441, 481, 521, 561, 601, 641, 681, 721, 761, 801, 841, 881, 921, 961, 1001, 1041, 1081, 1121, 1161, 1201])
])
M1_weekday = Route("Weekday", "M1 Weekdays", "Merced Bus", [
    Stop("n8273119140",
         [394, 424, 454, 484, 514, 544, 574, 604, 634, 664, 694, 724, 754, 784, 814, 844, 874, 904, 934, 964, 994, 1024,
          1054, 1114, 1174]),
    Stop("n7243854433",
         [401, 431, 461, 491, 521, 551, 581, 611, 641, 671, 701, 731, 761, 791, 821, 851, 881, 911, 941, 971, 1001,
          1031, 1061, 1121, 1181]),
    Stop("n89417839",
         [407, 437, 467, 497, 527, 557, 587, 617, 647, 677, 707, 737, 767, 797, 827, 857, 887, 917, 947, 977, 1007,
          1037, 1067, 1127, 1187]),
    Stop("n12154509604",
         [416, 446, 476, 506, 536, 566, 596, 626, 656, 686, 716, 746, 776, 806, 836, 866, 896, 926, 956, 986, 1016,
          1046, 1076, 1136, 1196]),
    Stop("n12154523360",
         [421, 451, 481, 511, 541, 571, 601, 631, 661, 691, 721, 751, 781, 811, 841, 871, 901, 931, 961, 991, 1021,
          1051, 1081, 1141, 1201]),
    Stop("n12162649319",
         [427, 457, 487, 517, 547, 577, 607, 637, 667, 697, 727, 757, 787, 817, 847, 877, 907, 937, 967, 997, 1027,
          1057, 1087, 1147, 1207]),
    Stop("n8273119140",
         [435, 465, 495, 525, 555, 585, 615, 645, 675, 705, 735, 765, 795, 825, 855, 885, 915, 945, 975, 1005, 1035,
          1065, 1095, 1155]),
    Stop("n12345722305",
         [439, 469, 499, 529, 559, 589, 619, 649, 679, 709, 739, 769, 799, 829, 859, 889, 919, 949, 979, 1009, 1039,
          1069, 1099, 1159]),
    Stop("n89432508",
         [397, 430, 446, 476, 506, 536, 566, 596, 626, 656, 686, 716, 746, 776, 806, 836, 866, 896, 926, 956, 986, 1016,
          1046, 1076, 1106, 1166]),
    Stop("n7242362059",
         [453, 483, 513, 543, 573, 603, 633, 663, 693, 723, 753, 783, 813, 843, 873, 903, 933, 963, 993, 1023, 1053]),
    Stop("n8204391953",
         [404, 437, 457, 487, 517, 547, 577, 607, 637, 667, 697, 727, 757, 787, 817, 847, 877, 907, 937, 967, 997, 1027,
          1057, 1083, 1113, 1173]),
    Stop("n7150827356",
         [408, 441, 461, 491, 521, 551, 581, 611, 641, 671, 701, 731, 761, 791, 821, 851, 881, 911, 941, 971, 1001,
          1031, 1061, 1087, 1117, 1177]),
    Stop("n12345722305",
         [412, 445, 465, 495, 525, 555, 585, 615, 645, 675, 705, 735, 765, 795, 825, 855, 885, 915, 945, 975, 1005,
          1035, 1065, 1091, 1121, 1181])
])
M1_weekend = Route("Weekend", "M1 Weekend", "Merced Bus", [
    Stop("n8273119140", [510, 600, 690, 780, 870, 960, 1050]),
    Stop("n7243854433", [514, 604, 694, 784, 874, 964, 1054]),
    Stop("n89417839", [521, 611, 701, 791, 881, 971, 1061]),
    Stop("n12154509604", [527, 617, 707, 797, 887, 977, 1067]),
    Stop("n12154523360", [536, 626, 716, 806, 896, 986, 1076]),
    Stop("n12162649319", [541, 631, 721, 811, 901, 991, 1081]),
    Stop("n8273119140", [547, 637, 727, 817, 907, 997, 1087]),
    Stop("n12345722305", [555, 645, 735, 825, 915, 1005]),
    Stop("n89432508", [558, 648, 738, 828, 918, 1008]),
    Stop("n8204391953", [488, 565, 655, 745, 835, 925, 1015]),
    Stop("n7150827356", [495, 572, 662, 752, 842, 932, 1022]),
    Stop("n12345722305", [499, 576, 666, 756, 846, 936, 1026])
])
M2_Weekday = Route("Weekday", "M2 Weekday", "Merced Bus", [
    Stop("n8273119140",
         [405, 435, 465, 495, 525, 555, 585, 615, 645, 675, 705, 735, 765, 795, 825, 855, 885, 915, 945, 975, 1005,
          1035, 1065, 1095, 1125, 1155, 1185]),
    Stop("n8717805995",
         [415, 445, 475, 505, 535, 565, 595, 625, 655, 685, 715, 745, 775, 805, 835, 865, 895, 925, 955, 985, 1015,
          1045, 1075, 1105, 1135, 1165, 1195]),
    Stop("n12162649319",
         [421, 451, 481, 511, 541, 571, 601, 631, 661, 691, 721, 751, 781, 811, 841, 871, 901, 931, 961, 991, 1021,
          1051, 1081, 1111, 1141, 1171, 1201]),
    Stop("n12154523360",
         [430, 460, 490, 520, 550, 580, 610, 640, 670, 700, 730, 760, 790, 820, 850, 880, 910, 940, 970, 1000, 1030,
          1060, 1090, 1120, 1150, 1180, 1210]),
    Stop("n12154520785",
         [369, 437, 467, 497, 527, 557, 587, 617, 647, 677, 707, 737, 767, 797, 827, 857, 887, 917, 947, 977, 1007,
          1037, 1067, 1097, 1127, 1157]),
    Stop("n8273119140",
         [376, 444, 474, 504, 534, 564, 594, 624, 654, 684, 714, 744, 774, 804, 834, 864, 894, 924, 954, 984, 1014,
          1044, 1074, 1104, 1134, 1164])
])
M2_Weekend = Route("Weekend", "M2 Weekend", "Merced Bus", [
    Stop("n8273119140", [510, 570, 630, 690, 750, 810, 870, 930, 990, 1050]),
    Stop("n8717805995", [520, 580, 640, 700, 760, 820, 880, 940, 1000, 1060]),
    Stop("n12162649319", [526, 586, 646, 706, 766, 826, 886, 946, 1006, 1066]),
    Stop("n12154523360", [535, 595, 655, 715, 775, 835, 895, 955, 1015, 1075]),
    Stop("n12154520785", [542, 602, 662, 722, 782, 842, 902, 962, 1022]),
    Stop("n8273119140", [549, 609, 669, 729, 789, 849, 909, 969, 1029])
])
M3_Weekday_North = Route("Weekday", "M3 Weekday North Loop", "Merced Bus", [
    Stop("n8273119140",
         [390, 420, 450, 480, 510, 540, 570, 600, 630, 660, 690, 720, 750, 780, 810, 840, 870, 900, 930, 960, 990, 1020,
          1050, 1080, 1110, 1140, 1170]),
    Stop("n2665133664",
         [393, 423, 453, 483, 513, 543, 573, 603, 633, 663, 693, 723, 753, 783, 813, 843, 873, 903, 933, 963, 993, 1023,
          1053, 1083, 1113, 1143, 1173, 384, 444, 474, 504, 534, 564, 594, 624, 654, 684, 714, 744, 774, 804, 834, 864,
          894, 924, 954, 984, 1014, 1044, 1074, 1104, 1134, 1164]),
    Stop("n7229743585",
         [402, 432, 462, 492, 522, 552, 582, 612, 642, 672, 702, 732, 762, 792, 822, 852, 882, 912, 942, 972, 1002,
          1032, 1062, 1092, 1122, 1152, 1182]),
    Stop("n12162649319",
         [407, 437, 467, 497, 527, 557, 587, 617, 647, 677, 707, 737, 767, 797, 827, 857, 887, 917, 947, 977, 1007,
          1037, 1067, 1097, 1127, 1157, 1187, 374, 434, 464, 494, 524, 554, 584, 614, 644, 674, 704, 734, 764, 794, 824,
          854, 884, 914, 944, 974, 1004, 1034, 1064, 1094, 1124, 1154]),
    Stop("n12154523360",
         [415, 445, 475, 505, 535, 565, 595, 625, 655, 685, 715, 745, 775, 805, 835, 865, 895, 925, 955, 985, 1015,
          1045, 1075, 1105, 1135, 1165, 1195]),
    Stop("n12154509603",
         [422, 452, 482, 512, 542, 572, 602, 632, 662, 692, 722, 752, 782, 812, 842, 872, 902, 932, 962, 992, 1022,
          1052, 1082, 1112, 1142, 1172, 1202]),
])
M3_Weekday_South = Route("Weekday", "M3 Weekday South", "Merced Bus", [
    Stop("n8273119140",
         [387, 424, 448, 478, 508, 538, 568, 598, 628, 658, 688, 718, 748, 778, 808, 838, 868, 898, 928, 958, 988, 1018,
          1048, 1078, 1108, 1138, 1168]),
    Stop("n89387813",
         [372, 393, 432, 454, 484, 514, 544, 574, 604, 634, 664, 694, 724, 754, 814, 844, 874, 904, 934, 964, 994, 1024,
          1054, 1084, 1114, 1144, 1174]),
    Stop("n6946543389",
         [378, 398, 438, 459, 489, 519, 549, 579, 609, 639, 669, 699, 729, 759, 819, 849, 879, 909, 939, 969, 999, 1029,
          1059, 1089, 1119, 1149, 1179])
])
M3_Weekend_North = Route("Weekend", "M3 Weekend North", "Merced Bus", [
    Stop("n8273119140", [513, 603, 693, 783, 873, 963, 1053]),
    Stop("n2665133664", [522, 612, 702, 792, 882, 972, 1062]),
    Stop("n7229743585", [527, 617, 707, 797, 887, 977, 1067]),
    Stop("n12162649319", [535, 625, 715, 805, 895, 985, 1075]),
    Stop("n12154523360", [542, 632, 722, 812, 902, 992]),
    Stop("n12154509603", [554, 644, 734, 824, 914, 1004]),
    Stop("n12162649319", [564, 654, 744, 834, 924, 1014]),
    Stop("n2665133664", [567, 657, 747, 837, 927, 1017])
])
M3_Weekend_South = Route("Weekend", "M3 Weekend South", "Merced Bus", [
    Stop("n8273119140", [494, 573, 663, 753, 843, 933, 1023]),
    Stop("n89387813", [499, 578, 668, 758, 848, 938, 1028]),
    Stop("n6946543389", [504, 583, 673, 763, 853, 943, 1033])
])
M4_Weekday = Route("Weekday", "M4 Weekday", "Merced Bus", [
    Stop("n8273119140",
         [390, 420, 450, 480, 510, 540, 570, 600, 630, 660, 690, 720, 750, 780, 810, 840, 870, 900, 930, 960, 990, 1020,
          1050, 1080, 1110, 1140, 1170]),
    Stop("n89447239",
         [393, 423, 453, 483, 513, 543, 573, 603, 633, 663, 693, 723, 753, 783, 813, 843, 873, 903, 933, 963, 993, 1023,
          1053, 1083, 1113, 1143, 1173]),
    Stop("n12153159164",
         [398, 428, 458, 488, 518, 548, 578, 608, 638, 668, 698, 728, 758, 788, 818, 848, 878, 908, 938, 968, 998, 1028,
          1058, 1088, 1118, 1148, 1178]),
    Stop("n12154523360",
         [407, 437, 467, 497, 527, 557, 587, 617, 647, 677, 707, 737, 767, 797, 827, 857, 887, 917, 947, 977, 1007,
          1037, 1067, 1097, 1127, 1157, 1187]),
    Stop("n12154509603",
         [412, 442, 472, 502, 532, 562, 592, 622, 652, 682, 712, 742, 772, 802, 832, 862, 892, 922, 952, 982, 1012,
          1042, 1072, 1102, 1132, 1162, 1192]),
    Stop("n12153159159",
         [418, 448, 478, 508, 538, 568, 598, 628, 658, 688, 718, 748, 778, 808, 838, 868, 898, 928, 958, 988, 1018,
          1048, 1078, 1108, 1138, 1168, 1198]),
    Stop("n89447239",
         [430, 460, 490, 520, 550, 580, 610, 640, 670, 700, 730, 760, 790, 820, 850, 880, 910, 940, 970, 1000, 1030,
          1060, 1090, 1120, 1150, 1180, 1210]),
    Stop("n89447239",
         [433, 463, 493, 523, 553, 583, 613, 643, 673, 703, 733, 763, 793, 823, 853, 883, 913, 943, 973, 1003, 1033,
          1063, 1093, 1123, 1153, 1183, 1213])
])
M4_Weekend = Route("Weekend", "M4 Weekend", "Merced Bus", [
    Stop("n8273119140", [480, 540, 600, 660, 720, 780, 840, 900, 960, 1020]),
    Stop("n89447239", [483, 543, 603, 663, 723, 783, 843, 903, 963, 1023]),
    Stop("n12153159164", [488, 548, 608, 668, 728, 788, 848, 908, 968, 1028]),
    Stop("n12154523360", [497, 557, 617, 677, 737, 797, 857, 917, 977, 1037]),
    Stop("n12154509603", [502, 562, 622, 682, 742, 802, 862, 922, 982, 1042]),
    Stop("n12153159159", [508, 568, 628, 688, 748, 808, 868, 928, 988, 1048]),
    Stop("n89447239", [520, 580, 640, 700, 760, 820, 880, 940, 1000, 1060]),
    Stop("n89447239", [523, 583, 643, 703, 763, 823, 883, 943, 1003, 1063])
])
M5_Weekday = Route("Weekday", "M5 Weekday", "Merced Bus", [
    Stop("n8273119140",
         [405, 435, 465, 495, 525, 555, 585, 615, 645, 675, 705, 735, 765, 795, 825, 855, 885, 915, 945, 975, 1005,
          1035, 1065, 1095, 1125, 1155, 1185]),
    Stop("n12162634549",
         [408, 438, 468, 498, 528, 558, 588, 618, 648, 678, 708, 738, 768, 798, 828, 858, 888, 918, 948, 978, 1008,
          1038, 1068, 1098, 1128, 1158, 1188]),
    Stop("n12385601110",
         [413, 443, 473, 503, 533, 563, 593, 623, 653, 683, 713, 743, 773, 803, 833, 863, 893, 923, 953, 983, 1013,
          1043, 1073, 1103, 1133, 1163, 1193]),
    Stop("n7115830972",
         [356, 421, 451, 481, 511, 541, 571, 601, 631, 661, 691, 721, 751, 781, 811, 841, 871, 901, 931, 961, 991, 1021,
          1051, 1081, 1111, 1141, 1171, 1201]),
    Stop("n89502913",
         [365, 430, 460, 490, 520, 550, 580, 610, 640, 670, 700, 730, 760, 790, 820, 850, 880, 910, 940, 970, 1000,
          1030, 1060, 1090, 1120, 1150, 1180, 1210]),
    Stop("n8680347059",
         [369, 434, 464, 494, 524, 554, 584, 614, 644, 674, 704, 734, 764, 794, 824, 854, 884, 914, 944, 974, 1004,
          1034, 1064, 1094, 1124, 1154, 1184, 1214]),
    Stop("n12385601110",
         [380, 445, 475, 505, 535, 565, 595, 625, 655, 685, 715, 745, 775, 805, 835, 865, 895, 925, 955, 985, 1015,
          1045, 1075, 1105, 1135, 1165])
])
M5_Weekend = Route("Weekend", "M5 Weekend", "Merced Bus", [
    Stop("n8273119140", [510, 570, 630, 690, 750, 810, 870, 930, 990, 1050]),
    Stop("n12162634549", [513, 573, 633, 693, 753, 813, 873, 933, 993, 1053]),
    Stop("n12385601110", [518, 578, 638, 698, 758, 818, 878, 938, 998, 1058]),
    Stop("n7115830972", [526, 586, 646, 706, 766, 826, 886, 946, 1006, 1066]),
    Stop("n89502913", [484, 535, 595, 655, 715, 775, 835, 895, 955, 1015, 1075]),
    Stop("n8680347059", [488, 541, 601, 661, 721, 781, 841, 901, 961, 1016]),
    Stop("n12385601110", [499, 552, 612, 672, 732, 792, 852, 912, 972, 1027])
])
M6_Weekday = Route("Weekday", "M6 Weekend", "Merced Bus", [
    Stop("n8273119140", [0, 465, 510, 555, 600, 645, 690, 735, 780, 825, 870, 915, 960, 1005, 1050, 1095, 1140, 1185]),
    Stop("n89453652", [421, 474, 519, 564, 609, 654, 699, 744, 789, 834, 879, 924, 969, 1014, 1059, 1104, 1149, 1194]),
    Stop("n89403995", [426, 479, 524, 569, 614, 659, 704, 749, 794, 839, 884, 929, 974, 1019, 1064, 1109, 1154, 1199]),
    Stop("n89498942", [435, 488, 533, 578, 623, 668, 713, 758, 803, 848, 893, 938, 983, 1028, 1073, 1118, 1163, 1208]),
    Stop("n2846363737",
         [438, 491, 536, 581, 626, 671, 716, 761, 806, 851, 896, 941, 986, 1031, 1076, 1121, 1166, 1211]),
])
M6_Weekend = Route("Weekend", "M6 Weekend", "Merced Bus", [
    Stop("n8273119140", [510, 555, 600, 645, 690, 735, 780, 825, 870, 915, 960, 1005, 1050]),
    Stop("n89453652", [519, 564, 609, 654, 699, 744, 789, 834, 879, 924, 969, 1014, 1059]),
    Stop("n89403995", [524, 569, 614, 659, 704, 749, 794, 839, 884, 929, 974, 1019, 1064]),
    Stop("n89498942", [493, 533, 578, 623, 668, 713, 758, 803, 848, 893, 938, 983, 1028, 1073]),
    Stop("n2846363737", [502, 536, 581, 626, 671, 716, 761, 806, 851, 896, 941, 986, 1031])
])
M7_Weekday = Route("Weekday", "M7 Weekday", "Merced Bus", [
    Stop("n8273119140", [400, 445, 490, 535, 580, 625, 670, 715, 760, 805, 850, 895, 940, 985, 1030, 1075, 1120, 1165]),
    Stop("n558599231", [411, 456, 501, 546, 591, 636, 681, 726, 771, 816, 861, 906, 951, 996, 1041, 1086, 1131, 1176]),
    Stop("n89500196",
         [373, 418, 463, 508, 553, 598, 643, 688, 733, 778, 823, 868, 913, 958, 1003, 1048, 1093, 1138, 1183]),
    Stop("n10734341598",
         [374, 419, 464, 509, 554, 599, 644, 689, 734, 779, 824, 869, 914, 959, 1004, 1049, 1094, 1139, 1184]),
    Stop("n89463642",
         [382, 427, 472, 517, 562, 607, 652, 697, 742, 787, 832, 877, 922, 967, 1012, 1057, 1102, 1147, 1192])
])
M7_Weekend = Route("Weekend", "M7 Weekend", "Merced Bus", [
    Stop("n8273119140", [510, 555, 600, 645, 690, 735, 780, 825, 870, 915, 960, 1005, 1050]),
    Stop("n558599231", [521, 566, 611, 656, 701, 746, 791, 836, 881, 926, 971, 1016, 1061]),
    Stop("n89500196", [483, 528, 573, 618, 663, 708, 753, 798, 843, 888, 933, 978, 1023, 1068]),
    Stop("n10734341598", [484, 529, 574, 619, 664, 709, 754, 799, 844, 889, 934, 979, 1024, 1069]),
    Stop("n89463642", [492, 537, 582, 627, 672, 717, 762, 807, 852, 897, 942, 987, 1032, 1077])
])
Routes = [BobcatExpress, C1, C2, E1, E2, FastCat, FastCat2, GLine, YosemiteExpress, UCBusSouth, USBusNorth, M1_weekday,
          M1_weekend, M2_Weekday, M2_Weekend, M3_Weekday_North, M3_Weekday_South, M3_Weekend_North, M3_Weekend_South,
          M4_Weekday, M4_Weekend, M5_Weekday, M5_Weekend, M6_Weekday, M6_Weekend, M7_Weekday, M7_Weekend]


def compute_travel_time(graph, route):
    try:
        return osmnx.routing.route_to_gdf(graph, route, weight="travel_time")["travel_time"].sum()
    except Exception:
        return 0

def CalculateTravelTime(busdatabase: geopandas.GeoDataFrame, currentroute: Route, time_of_day: float,
                        orginnode: str, destinationnode: str):
    besttraveltime =10000000000
    traveltime = 0
    for stopa in currentroute.stops:
        orginstop = stopa
        bestdeparturetime = 0
        for time in stopa.times:
            if time_of_day+(busdatabase.loc[(orginnode[0], int(orginnode[1:])), orginstop.OSM_ID]/60) < time:
                bestdeparturetime = time
                break
        for stopb in currentroute.stops:
            deststop = stopb
            bestarrivaltime = 0
            for time in stopb.times:
                if bestdeparturetime < time:
                    bestarrivaltime = time
                    break
            walktofirststoptime = busdatabase.loc[(orginnode[0], int(orginnode[1:])), orginstop.OSM_ID] / 60
            waitforbustime = bestdeparturetime - time_of_day - walktofirststoptime
            onthebustime = bestarrivaltime - bestdeparturetime
            walktodestinationtime = busdatabase.loc[(destinationnode[0], int(destinationnode[1:])), deststop.OSM_ID] / 60
            traveltime = walktofirststoptime+ waitforbustime + onthebustime + walktodestinationtime
            if traveltime < besttraveltime:
                besttraveltime = traveltime
    return besttraveltime
if __name__ == "__main__":
    fastestmod = geopandas.read_feather("E:/fastestmode.feather")
    #print(str(fastestmod.columns.tolist()))
    methods = ['Bobcat Express', 'C-1', 'C-2', 'FastCat', 'FastCat 2', 'G-Line', 'Yosemite Express', 'UC Bus South', 'UC Bus North', 'M1 Weekdays', 'M2 Weekday', 'M3 Weekday North Loop', 'M3 Weekday South', 'M4 Weekday', 'M5 Weekday', 'M6 Weekend', 'M7 Weekday']
    fastestmod.drop("Walking",inplace=True,axis=1)
    fastestmod["fastest_route"] = fastestmod[methods].min(axis=1)
    fastestmod["fastest_route_method"] = fastestmod[methods].idxmin(axis=1)
    fastestmod.to_file("E:/fastestmod.geojson", driver="GeoJSON")
    fastestmod.to_feather("E:/fastestmod.feather")
    #graph = osmnx.graph_from_place("Merced, Merced County, California, USA", network_type="walk", simplify=True)
    #osmnx.plot_graph(graph)
    #fastestmod = geopandas.read_feather("fastestmod.feather")
    #fastestmod.to_file("fastestmod.geojson", driver="GeoJSON")
    #busdatabase = geopandas.read_feather("Busdatabase.feather")
    #busdatabase.index = busdatabase.index.set_levels(busdatabase.index.levels[0].str[0], level=0)
    #print(CalculateTravelTime(busdatabase, M1_weekday, 600, "w831403972","w311695693"))
    """
    fastestmode = geopandas.read_feather("fastestmod.feather")
    print(fastestmode.columns)
    #fastestmode.to_file("fastestmod.geojson", driver="GeoJSON")
    #finalgdf = geopandas.read_file("MercedCounty.geojson")
    #print(finalgdf.head())
    #finalgdf.to_feather("MercedCounty.feather")

    stops = []
    api = osmapi.OsmApi()
    for route in Routes:
        # print(route.route_name)
        for stop in route.stops:
            if stop.OSM_ID not in stops:
                stops.append(stop.OSM_ID)
    alreadydone = ["n12154520786", "n12154520785", "n12154520787", "n12154509604", "n12153159159", "n12167340731",
                   "n12162711345", "n12167340732", "n12162649319", "n12162599795", "n12162634549", "n12153159164",
                   "n12153159162", "n12153159167", "n12153159165", "n12153159160", "n12153159156", "n12153159161",
                   "n12153159163", "n12154522608", "n12154523360", "n12154509606", "n12154509603", "n12154500900",
                   "n12154509601", "n12154509602", "n12162599793", "n12154530337", "n12162649318", "n12162599794",
                   "n12162711342", "n12162735605", "n12162711346", "n12154530339", "n12154530338", "n12154530336",
                   "n12167312041", "n12167312042", "n12345722306", "n12385601110", "n12385601113", "n12385555145",
                   "n12385630325", "n12210469803"]
    stops = [item for item in stops if item not in alreadydone]
    graph = osmnx.graph_from_place("Merced, Merced County, California, USA", network_type="walk", simplify=True)
    osmnx.graph.truncate.largest_component(graph, strongly=False)
    tagsa = {'building': True, "leisure": True}
    gdfa = osmnx.features_from_place("Merced, Merced County, California, USA", tagsa)[["geometry"]]
    tagsb = {"addr:street": True, "addr:housenumber": True, "addr:postcode": True}
    gdfb = osmnx.features_from_place("Merced, Merced County, California, USA", tagsb)[["geometry"]]
    gdf = geopandas.geodataframe.GeoDataFrame(pandas.concat([gdfa, gdfb], axis=0).drop_duplicates())
    gdf.drop("relation", level="element", inplace=True)
    # gdf.drop(("node",11091857903), inplace=True)
    polygons = gdf.groupby(level=0).get_group("way")
    points = gdf.groupby(level=0).get_group("node")
    pointsinpolygons = polygons.sindex.query(points.geometry, predicate="within")
    pointsindex = np.ones(len(points), dtype=bool)
    pointsindex[pointsinpolygons[0]] = False
    points = points.iloc[pointsindex]
    polygons.geometry = polygons.geometry.centroid
    finalgdf = geopandas.geodataframe.GeoDataFrame(pandas.concat([polygons, points], axis=0))
    finalgdf["nearestnode"] = osmnx.distance.nearest_nodes(graph,
                                                           finalgdf.geometry.get_coordinates(ignore_index=True).x,
                                                           finalgdf.geometry.get_coordinates(ignore_index=True).y)
    speed_dict = {edge: 5 for edge in graph.edges}
    networkx.set_edge_attributes(graph, speed_dict, "speed_kph")
    osmnx.routing.add_edge_travel_times(graph)
    print(len(finalgdf))"""
    """for destination_stop in stops:
        #print(destination_stop.OSM_ID)
        destination_node_api_dict = api.NodeGet(int(destination_node[1:]))
        #print(destination_node_centroid)
        destination_node = osmnx.distance.nearest_nodes(graph,destination_node_api_dict[long],destination_node_api_dict[lat])
        #print(destination_node)
        destinations = list(itertools.repeat(destination_node, len(finalgdf)))
        routelists = osmnx.routing.shortest_path(graph, finalgdf["nearestnode"],destinations, weight="travel_time", cpus=mp.cpu_count())
        print(destination_stop)
        with mp.Pool(mp.cpu_count()) as pool:
                travel_times = pool.map(functools.partial(compute_travel_time,graph), routelists)
        with open(str(destination_stop)+'.pkl', 'wb') as f:
            pickle.dump(travel_times, f)
        finalgdf[str(stops)] = travel_times

    for files in os.listdir("pklfiles"):
        if files.endswith(".pkl"):
            #data = open("pklfiles/"+files).read().replace('\r\n', '\n')  # read and replace file contents
            #/dst = "pklfiles/"+files + ".tmp"
            #open("pklfiles/"+files, "w").write(data)
            with open("pklfiles/" + files, 'rb') as f:
                travel_times = pickle.load(f)
                finalgdf[files[:-4]] = travel_times
    """
    #finalgdf = geopandas.read_feather("Busdatabase.feather")
    #print(finalgdf)
    #print(finalgdf.head())